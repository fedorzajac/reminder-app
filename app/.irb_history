Reminder.all
exit
Time.now
Time.now + 1.month
Time.now + 1.w
Time.now + 1.week
exit
exir
exit
Reminder.where("next_ocurrence < ?", Time.now)
Reminder.where("next_ocurrence > ?", Time.now)
exit
Reminder.all
Reminder.where("next_ocurrence > ?", Time.now)
Reminder.where("next_ocurrence < ?", Time.now)
Reminder.where("next_ocurrence < ?", Time.now)
Reminder.where("next_ocurrence > ?", Time.now)
Time.now
Time.current
exit
Reminder.where("next_ocurrence < ?", Time.current)
Reminder.where("next_ocurrence > ?", Time.current)
Time.current
Time.now
Reminder.where("next_ocurrence > ?", Time.now)
Reminder.where("next_ocurrence < ?", Time.now)
Time.now
Reminder.where(recurrence: 'minutely')
Reminder.where(recurrence: 'minutely').next_ocurrence
Reminder.where(recurrence: 'minutely').first.next_ocurrence
Reminder.where(recurrence: 'minutely').first.next_ocurrence == Time.nov
Reminder.where(recurrence: 'minutely').first.next_ocurrence == Time.now
Reminder.where(recurrence: 'minutely').first.next_ocurrence < Time.now
Reminder.where(recurrence: 'minutely').first.next_ocurrence > Time.now
Reminder.where(recurrence: 'minutely').first.next_ocurrence
Time.current
exit
Time.current
Time.now
Reminder.where("next_ocurrence < ?", Time.now)
RECURRENCE
exit
scheduler = Rufus::Scheduler.new
scheduler.every 'minute' { puts "hello" }
scheduler.every 'minute' do puts "hello" end
scheduler.every '1m' do puts "hello" end
scheduler.every '5s' do puts "hello" end
exit
scheduler.jobs
10.second.from_now
10.seconds.from_now
Reminder.all
exit
Reminder.all
exit
Reminder.all
Reminder.all
exir
exit
